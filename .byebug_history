continue
params[:user][:avatar].class
params[:user][:avatar]
params[:avatar]
params
continue
params[:user][:avatar].class
params[:user][:avatar]
params[:avatar]
params
continue
s.html_safe
continue
messages
continue
messages
continue
chat_params[3]
chat_params[0]
chat_params[2]
chat_params[1]
continue
chat_params[0]
User.find_by_id(chat_params[0].to_i)
continue
chat_params[0]
User.find_by_id(chat_params[3].to_i)
continue
chat_params
chat_params.class
continue
parameters
parameters[4]
parameters[3]
parameters[2]
parameters[1]
parameters[0]
parameters
continue
user.member_role.count
user.member_role
user.id
user.reload.roles
continue
param["users"]
roles_to_added
n
continue
 param["users"]
n
continue
param["roles"]
param
continue
param["roles"]
param
continue
n
continue
MemberRole.create(user_id: 256, role_id: 16)
user.id
MemberRole.create(user_id: user.id, role_id: 16)
roles_to_added 
user = User.find_by_id(256)
User.find_by_id(256)
n
param["users"]
continue
n
continue
param["users"].map(&:to_i)
param["users"]
continue
param["user"].map(&:to_i)
param["user"]
continue
param["user"]
param[:user].id
param[:user]
param[user]
param
n
continue
user
param["users"]
roles_to_added
n
param["roles"].map(&:to_i)
param["roles"]
roles_to_added
 param["roles"]
param
continue
params[:roles]
params
continue
user
continue
@user[1].id
@user[1]
@user
continue
params
para,ms
continue
params
continue
params[:url]
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
response.body
continue
JSON.parse(response.body)["response"]["name"]
JSON.parse(response.body)["response"]
JSON.parse(response.body)
response.body
continue
params
UserRole.all
Role.all
continue
Role.find(404)
params
continue
 params.key?("name")
params.key?("id")
params
continue
@created_user.id
response.body
continue
roles["status"]
roles
response.body
continue
response.body
roles
continue
roles
continue
created_role
continue
JSON.parse(response.body)["status"]
response.body["status"]
response.body
continue
created_roles
continue
created_roles
continue
role
build(:role)
created_roles
continue
created_user_id["message"]["id"]
created_user_id
continue
c["message"]["id"]
c["message"]
c = JSON.parse(response.body)
JSON.parse(response.body)
JSON.parse(response.body["message"])
JSON.parse(response.body)
JSON.parse(response.body["message"])
 JSON.parse(response.body["message"]["id"])
response.body.class
response.body["message"]
response.body
response.body["message"]["id"]
created_user_id
continue
JSON.parse(response.body)["message"]["id"]
JSON.parse(response.body)["errors"]
JSON.parse(response.body).class
JSON.parse(response.body)
created_user
response.body
continue
created_user
continue
response.body
continue
attributes_for(:user)
user
response.body
continue
m
n
nnnnnnnn
n
authentication
n
continue
params
continue
filtered_data
continue
filtered_data
continue
filtered_data
continue
filtered_data
continue
user_new_hash
continue
user_new_hash
@tmp_hash
continue
user_new_hash
@tmp_hash
continue
user_info.to_h
user_info
continue
params["userchg"].to_a - params["userori"].to_a
continue
params["userchg"].to_a - params["userori"].to_a
continue
params["userchg"].to_a - params["userori"].to_a
continue
 params["userchg"].to_a - params["userori"].to_a
@changed_date
continue
params["userchg"].to_a - params["userori"].to_a
params["userchg"].to_a - params["userori"].to_a)
params["userchg"]
params["userchg"
params["userori"]
continue
params
continue
compulsory_keys - except_params.keys
compulsory_keys
params
continue
params
continue
params
continue
response
continue
response
